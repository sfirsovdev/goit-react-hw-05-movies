{"version":3,"file":"static/js/797.97d67130.chunk.js","mappings":"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","sources":["components/moviesList/movieItem/MovieItem.styled.js","components/moviesList/movieItem/MovieItem.jsx","components/moviesList/MovieList.styled.js","components/moviesList/MoviesList.jsx","pages/MoviesPage.jsx","service/apiService.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  margin: ${p => p.theme.space[0]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { MovieLink } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\nconst MovieItem = ({ id, title }) => {\n  return (\n    <>\n      <li>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n        </MovieLink>\n      </li>\n    </>\n  );\n};\nexport default MovieItem;\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[0]}px;\n`;\n","import MovieItem from 'components/moviesList/movieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from './MovieList.styled';\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return <MovieItem key={id} title={original_title} id={id} />;\n      })}\n    </List>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { fetchMoviesBySearch } from 'service/apiService';\nimport { MoviesList } from 'components/moviesList/MoviesList';\nimport styled from 'styled-components';\nexport default function MoviesPageRender() {\n  const [movies, setMovies] = useState([]);\n  const [searhParams, setSearchParams] = useSearchParams();\n  const query = searhParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getFetchMovies = async searchQuery => {\n      try {\n        const data = await fetchMoviesBySearch(searchQuery);\n        if (!data.results.length) {\n          throw new Error('No results found');\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('No results found', { duration: 3000 });\n      }\n    };\n    if (query === '') {\n      return;\n    }\n    getFetchMovies(query);\n  }, [query]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={({ query }, { resetForm }) => {\n          setSearchParams({ query });\n          resetForm();\n        }}\n      >\n        <SearchForm>\n          <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n          <SearchBtn type=\"submit\">Search</SearchBtn>\n        </SearchForm>\n      </Formik>\n      {Object.keys(movies).length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n}\nconst SearchForm = styled(Form)`\n  margin-left: ${p => p.theme.space[3]}px;\n`;\nconst Input = styled(Field)`\n  margin-right: ${p => p.theme.space[3]}px;\n  width: ${p => p.theme.space[8]}px;\n  height: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n  }\n`;\n\nconst SearchBtn = styled.button`\n  height: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n    background-color: ${p => p.theme.colors.white};\n    font-weight: ${p => p.theme.fontWeights.bold};\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2223059c3b0984b00c4d5656092cb839';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"],"names":["MovieLink","styled","Link","p","theme","space","colors","text","fontSizes","m","fontWeights","normal","accent","id","title","to","List","MoviesList","movies","map","original_title","MoviesPageRender","useState","setMovies","useSearchParams","searhParams","setSearchParams","query","get","useEffect","getFetchMovies","searchQuery","fetchMoviesBySearch","data","results","length","Error","console","log","toast","duration","initialValues","onSubmit","resetForm","SearchForm","Input","name","type","placeholder","SearchBtn","Object","keys","Form","Field","radii","borders","white","bold","axios","api_key","fetchTrendingMoovies","response","message","fetchMoviesById","movieId","fetchCastById","fetchReviewById"],"sourceRoot":""}